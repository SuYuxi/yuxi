//dp
#include <iostream>
#include <vector>
#include <cmath>
using namespace std;
int N, M, K;
const int INF = 1e9;
int dp(int i, int j) {
	if(j == 0)
	{
		if(i + K - 1 >= N)
		{
			return 0;
		}
		else
		{
			return -INF;
		}
	}
	long long MAX = -INF;
	for(int k = 1; k <= K; i++)
	{
		MAX = max(MAX, dp(i + k, j - 1));
	}
	return MAX;
}
int main() {
	cin >> N >> M << K;
	vector<int> A(N);
	for(int i = 0; i < N; i++) cin >> A[i];
	cout << max(dp(0, M), -1) << endl;
	return 0;
}
